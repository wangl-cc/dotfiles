#!/usr/bin/env bash

__BOOTSTRAP_SRC_DIR=$(dirname "$(realpath "${BASH_SOURCE[0]}")")
bootstrap_dir="$__BOOTSTRAP_SRC_DIR/bootstrap.d"

export CURRENT_INDENT=0

export ACTION_COLOR=35
export TARGET_COLOR=34

echo_indent() {
  for ((i = 0; i < CURRENT_INDENT; i++)); do
    echo -n "  "
  done
  echo -e "$1"
}

colorize() {
  # shellcheck disable=SC2028
  echo "\033[1;${1}m${2}\033[0m"
}

# Make sure the binary path of homebrew is in the PATH
if [ "$(uname -s)" = 'Darwin' ]; then
  if [ "$(uname -m)" = 'arm64' ]; then
    if [ -e /opt/homebrew/bin ]; then
      export PATH="/opt/homebrew/bin:$PATH"
    fi
  else
    if [ -e /usr/local/bin ]; then
      export PATH="/usr/local/bin:$PATH"
    fi
  fi
elif [ "$(uname -s)" = 'Linux' ]; then
  # set path to homebrew temporary to find packages installed by homebrew
  # if linuxbrew in installed other location, the PATH should be set manually
  if [ -e /home/linuxbrew/.linuxbrew ]; then
    export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
  fi
fi


# Use USTC mirrors for homebrew if not in GitHub Codespaces and not set HOMEBREW_NO_MIRROR
if [[ -z "$CODESPACES" && -z "$HOMEBREW_NO_MIRROR" ]]; then
  export HOMEBREW_MIRROR_DOMAIN="https://mirrors.ustc.edu.cn"
fi

# run bootstrap scripts for macOS
if [ "$(uname -s)" = 'Darwin' ]; then
  bash "$bootstrap_dir/macOS.sh"
fi

# run bootstrap scripts for Homebrew
if command -v brew >/dev/null 2>&1; then
  bash "$bootstrap_dir/brew.sh"
fi

# run bootstrap scripts for fish-shell
if command -v fish >/dev/null 2>&1; then
  fish "$bootstrap_dir/fish.fish"
fi

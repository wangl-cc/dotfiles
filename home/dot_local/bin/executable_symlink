#!/usr/bin/env python3
#
# A helper to create chezmoi link

import sys
from os import path, stat, symlink

HOME = path.expanduser("~")
CHEZMOI_SHARE = path.join(HOME, ".local/share/chezmoi/home")


def process_dirs(dir: str, root: str = HOME) -> str:
    """
    Iterate over all parts of the given relative directory and process it to chezmoi
    flavor path.

    - If a directory `dir` is private (mode 700), it will be renamed as `"private_$dir"`.
    """
    processed = ""
    parent = root
    for dir_name in path.split(dir):
        dir_path = path.join(parent, dir_name)
        if path.isdir(dir_path) and stat(dir_path).st_mode & 0o777 == 0o700:
            processed = path.join(processed, f"private_{dir_name}")
            parent = path.join(parent, dir_name)
        else:
            processed = path.join(processed, dir_name)
            parent = path.join(parent, dir_name)
    return processed


def chezmoi_symlink(src: str, dest: str):
    abs_dest = path.abspath(dest)
    rel_dest = path.relpath(abs_dest, path.expanduser("~"))
    dest_dir = process_dirs(path.dirname(rel_dest))
    dest_name = path.basename(dest)

    with open(path.join(CHEZMOI_SHARE, dest_dir, f"symlink_{dest_name}"), "w") as f:
        f.write(src)

    symlink(src, dest)


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: executable_symlink <src> [dest]")
        sys.exit(1)

    src = sys.argv[1]
    dest = sys.argv[2] if len(sys.argv) > 2 else path.basename(src)
    chezmoi_symlink(src, dest)
